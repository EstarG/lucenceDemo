<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.alipay.demo</groupId>
  <artifactId>demo</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  
 	 <!-- 设置 Spring 的版本 --> 
    <properties> 
        <org.springframework.version>3.0.0.RELEASE</org.springframework.version> 
    </properties>

    <dependencies> 
<!--         <!– 此处开始就是Spring 所有的jar了，spring3.0的jar包拆分了，所以很多 –>  -->
<!--         <!– Core utilities used by other modules. Define this if you use Spring  -->
<!--             Utility APIs (org.springframework.core.*/org.springframework.util.*) –>  -->
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-core</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>

<!--         <!– Expression Language (depends on spring-core) Define this if you use  -->
<!--             Spring Expression APIs (org.springframework.expression.*) –>  -->
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-expression</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>

<!--         <!– Bean Factory and JavaBeans utilities (depends on spring-core) Define  -->
<!--             this if you use Spring Bean APIs (org.springframework.beans.*) –>  -->
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-beans</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>

<!--         <!– Aspect Oriented Programming (AOP) Framework (depends on spring-core,  -->
<!--             spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) –>  -->
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-aop</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>

<!--         <!– Application Context (depends on spring-core, spring-expression, spring-aop,  -->
<!--             spring-beans) This is the central artifact for Spring’s Dependency Injection  -->
<!--             Container and is generally always defined –>  -->
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-context</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>

<!--         <!– Various Application Context utilities, including EhCache, JavaMail,  -->
<!--             Quartz, and Freemarker integration Define this if you need any of these integrations –>  -->
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-context-support</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>

<!--         <!– Transaction Management Abstraction (depends on spring-core, spring-beans,  -->
<!--             spring-aop, spring-context) Define this if you use Spring Transactions or  -->
<!--             DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) –>  -->
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-tx</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>

<!--         <!– JDBC Data Access Library (depends on spring-core, spring-beans, spring-context,  -->
<!--             spring-tx) Define this if you use Spring’s JdbcTemplate API (org.springframework.jdbc.*) –>  -->
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-jdbc</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>

<!--         <!– Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA,  -->
<!--             and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx)  -->
<!--             Define this if you need ORM (org.springframework.orm.*) –>  -->
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-orm</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>

<!--         <!– Object-to-XML Mapping (OXM) abstraction and integration with JAXB,  -->
<!--             JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans,  -->
<!--             spring-context) Define this if you need OXM (org.springframework.oxm.*) –>  -->
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-oxm</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>

<!--         <!– Web application development utilities applicable to both Servlet and  -->
<!--             Portlet Environments (depends on spring-core, spring-beans, spring-context)  -->
<!--             Define this if you use Spring MVC, or wish to use Struts, JSF, or another  -->
<!--             web framework with Spring (org.springframework.web.*) –>  -->
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-web</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>

<!--         <!– Spring MVC for Servlet Environments (depends on spring-core, spring-beans,  -->
<!--             spring-context, spring-web) Define this if you use Spring MVC with a Servlet  -->
<!--             Container such as Apache Tomcat (org.springframework.web.servlet.*) –>  -->
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-webmvc</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>

<!--         <!– Spring MVC for Portlet Environments (depends on spring-core, spring-beans,  -->
<!--             spring-context, spring-web) Define this if you use Spring MVC with a Portlet  -->
<!--             Container (org.springframework.web.portlet.*) –>  -->
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-webmvc-portlet</artifactId> 
            <version>${org.springframework.version}</version> 
        </dependency>

<!--         <!– Support for testing Spring applications with tools such as JUnit and  -->
<!--             TestNG This artifact is generally always defined with a ‘test’ scope for  -->
<!--             the integration testing framework and unit testing stubs –>  -->
        <dependency> 
            <groupId>org.springframework</groupId> 
            <artifactId>spring-test</artifactId> 
            <version>${org.springframework.version}</version> 
            <scope>test</scope> 
        </dependency> 
<!--         <!– 上面的都是Spring的jar包，可以选择性的添加 –>  -->


<!--         <!– tomcat servlet开发包 –>  -->
        <dependency> 
            <groupId>javax.servlet</groupId> 
            <artifactId>jstl</artifactId> 
            <version>1.2</version> 
        </dependency> 
<!--         <!– JSTL标签库 –>  -->
        <dependency> 
            <groupId>javax.servlet</groupId> 
            <artifactId>servlet-api</artifactId> 
            <version>2.5</version> 
        </dependency> 
<!--         <!– mysql的数据库驱动包 –>  -->
        <dependency> 
            <groupId>mysql</groupId> 
            <artifactId>mysql-connector-java</artifactId> 
            <version>5.1.21</version> 
        </dependency> 
<!--         <!– 日志打印 log4j包 –>  -->
        <dependency> 
            <groupId>log4j</groupId> 
            <artifactId>log4j</artifactId> 
            <version>1.2.14</version> 
            <scope>runtime</scope> 
        </dependency> 
<!--         <!– 下面两个包 commons-dbcp,commons-pool 是配置数据源的包–>  -->
        <dependency> 
            <groupId>commons-dbcp</groupId> 
            <artifactId>commons-dbcp</artifactId> 
            <version>1.4</version> 
        </dependency> 
        <dependency> 
            <groupId>commons-pool</groupId> 
            <artifactId>commons-pool</artifactId> 
            <version>1.4</version> 
        </dependency>

<!--         <!– 日志记录依赖包，很多都依赖此包，像log4j,json-lib等等 –>  -->
        <dependency> 
            <groupId>commons-logging</groupId> 
            <artifactId>commons-logging-api</artifactId> 
            <version>1.1</version> 
        </dependency> 
<!--         <!– Spring 文件上传的包 –>  -->
        <dependency> 
            <groupId>commons-fileupload</groupId> 
            <artifactId>commons-fileupload</artifactId> 
            <version>1.2.2</version> 
        </dependency> 
<!--         <!– Spring 文件上传的依赖包 –>  -->
        <dependency> 
            <groupId>org.apache.commons</groupId> 
            <artifactId>commons-io</artifactId> 
            <version>1.3.2</version> 
        </dependency> 
<!--         <!– dom4j 解析 XML文件的包 –>  -->
        <dependency> 
            <groupId>dom4j</groupId> 
            <artifactId>dom4j</artifactId> 
            <version>1.6.1</version> 
        </dependency> 
<!--         <!– 下面的三个包是在配置事务的时候用到的 spring的依赖包  –>  -->
        <dependency> 
            <groupId>org.aspectj</groupId> 
            <artifactId>aspectjweaver</artifactId> 
            <version>1.7.0</version> 
        </dependency> 
        <dependency> 
            <groupId>aopalliance</groupId> 
            <artifactId>aopalliance</artifactId> 
            <version>1.0</version> 
        </dependency> 
        <dependency> 
            <groupId>cglib</groupId> 
            <artifactId>cglib-nodep</artifactId> 
            <version>2.2.2</version> 
        </dependency>

<!--         <!– JSON lib 开发包 以及它的依赖包 –>  -->
        <dependency> 
            <groupId>net.sf.json-lib</groupId> 
            <artifactId>json-lib</artifactId> 
            <classifier>jdk15</classifier> 
            <version>2.4</version> 
        </dependency> 
        <dependency> 
            <groupId>commons-beanutils</groupId> 
            <artifactId>commons-beanutils</artifactId> 
            <version>1.8.3</version> 
        </dependency> 
        <dependency> 
            <groupId>commons-collections</groupId> 
            <artifactId>commons-collections</artifactId> 
            <version>3.2.1</version> 
        </dependency> 
        <dependency> 
            <groupId>commons-lang</groupId> 
            <artifactId>commons-lang</artifactId> 
            <version>2.6</version> 
        </dependency> 
        <dependency> 
            <groupId>net.sf.ezmorph</groupId> 
            <artifactId>ezmorph</artifactId> 
            <version>1.0.5</version> 
        </dependency> 
<!--         <!– junit 测试包 –>  -->
        <dependency> 
            <groupId>junit</groupId> 
            <artifactId>junit</artifactId> 
            <version>3.8.1</version> 
        </dependency> 
        
        <dependency>
	    	<groupId>org.mybatis</groupId>
		    <artifactId>mybatis</artifactId>
		    <version>3.2.2</version>
		</dependency>
		
		<dependency>
		    <groupId>org.mybatis</groupId>
		    <artifactId>mybatis-spring</artifactId>
		    <version>1.2.0</version>
		</dependency>
		
		<dependency>
		    <groupId>javax.annotation</groupId>
		    <artifactId>javax.annotation-api</artifactId>
		    <version>1.2</version>
		</dependency>
  </dependencies>
  <build>
     <finalName>demo</finalName>
     <plugins>
	    <plugin>
	       <groupId>org.mortbay.jetty</groupId>
	       <artifactId>maven-jetty-plugin</artifactId>
	       <version>6.1.10</version>
	       <configuration>
	               <scanIntervalSeconds>10</scanIntervalSeconds>
	               <stopKey>foo</stopKey>
	               <stopPort>9999</stopPort>
	       </configuration>
	       <executions>
	               <execution>
	                       <id>start-jetty</id>
	                       <phase>pre-integration-test</phase>
	                       <goals>
	                               <goal>run</goal>
	                       </goals>
	                       <configuration>
	                               <scanIntervalSeconds>0</scanIntervalSeconds>
	                               <daemon>true</daemon>
	                       </configuration>
	               </execution>
	               <execution>
	                       <id>stop-jetty</id>
	                       <phase>post-integration-test</phase>
	                       <goals>
	                               <goal>stop</goal>
	                       </goals>
	               </execution>
	       </executions>
		</plugin>
	</plugins>
   </build>

  
</project>